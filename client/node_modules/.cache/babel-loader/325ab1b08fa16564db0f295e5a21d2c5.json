{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebMotorsFontes\\\\websocket-poc\\\\client\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8080', {\n  transports: ['websocket']\n});\nsocket.on('connect', () => console.log('IO Connect => New connection'));\n\nconst Chat = () => {\n  _s();\n\n  const [message, updateMessage] = useState('');\n  const [messages, updateMessages] = useState([]);\n  useEffect(() => {\n    const handleNewMessage = newMessage => {\n      updateMessages([...messages, newMessage]);\n    };\n\n    socket.on('chat.message', handleNewMessage);\n    return () => socket.off('chat.message', handleNewMessage);\n  }, []);\n\n  const handleOnChange = e => {\n    updateMessage(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (message.trim()) {\n      socket.emit('chat.message', {\n        id: 1,\n        message\n      });\n      updateMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: [messages.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list__item list__item--mine\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message message--mine\",\n          children: m.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }, this)\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list__item list__item--other\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message message--other\",\n          children: \"Ol\\xE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form__field\",\n        onChange: handleOnChange,\n        placeholder: \"Digite uma nova mensagem aqui\",\n        type: \"text\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"HO/xg/OJMSFNdNRWZNE8NEvysc0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/WebMotorsFontes/websocket-poc/client/src/Chat.js"],"names":["React","useEffect","useState","io","socket","transports","on","console","log","Chat","message","updateMessage","messages","updateMessages","handleNewMessage","newMessage","off","handleOnChange","e","target","value","handleFormSubmit","preventDefault","trim","emit","id","map","m"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,EAA0B;AAAEE,EAAAA,UAAU,EAAE,CAAC,WAAD;AAAd,CAA1B,CAAjB;AACAD,MAAM,CAACE,EAAP,CAAU,SAAV,EAAqB,MAAMC,OAAO,CAACC,GAAR,CAAY,8BAAZ,CAA3B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACU,QAAD,EAAWC,cAAX,IAA6BX,QAAQ,CAAC,EAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,gBAAgB,GAAGC,UAAU,IAAI;AACnCF,MAAAA,cAAc,CAAC,CAAC,GAAGD,QAAJ,EAAcG,UAAd,CAAD,CAAd;AACH,KAFD;;AAGAX,IAAAA,MAAM,CAACE,EAAP,CAAU,cAAV,EAA0BQ,gBAA1B;AACA,WAAO,MAAMV,MAAM,CAACY,GAAP,CAAW,cAAX,EAA2BF,gBAA3B,CAAb;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,cAAc,GAAGC,CAAC,IAAI;AACxBP,IAAAA,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGH,CAAC,IAAI;AAC1BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIZ,OAAO,CAACa,IAAR,EAAJ,EAAoB;AAChBnB,MAAAA,MAAM,CAACoB,IAAP,CAAY,cAAZ,EAA4B;AACxBC,QAAAA,EAAE,EAAE,CADoB;AAExBf,QAAAA;AAFwB,OAA5B;AAIAC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ,GATD;;AAWA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,iBACaC,QAAQ,CAACc,GAAT,CAAaC,CAAC,iBACX;AACI,QAAA,SAAS,EAAC,6BADd;AAAA,+BAII;AAAM,UAAA,SAAS,EAAC,uBAAhB;AAAA,oBACKA,CAAC,CAACjB;AADP;AAAA;AAAA;AAAA;AAAA;AAJJ,SAESiB,CAAC,CAACF,EAFX;AAAA;AAAA;AAAA;AAAA,cADH,CADb,eAWI;AAAI,QAAA,SAAS,EAAC,8BAAd;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,QAAQ,EAAEJ,gBAFd;AAAA,6BAII;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,QAAQ,EAAEJ,cAFd;AAGI,QAAA,WAAW,EAAC,+BAHhB;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAEP;AALX;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA5DD;;GAAMD,I;;KAAAA,I;AA8DN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:8080', { transports: ['websocket'] });\r\nsocket.on('connect', () => console.log('IO Connect => New connection'));\r\n\r\nconst Chat = () => {\r\n    const [message, updateMessage] = useState('');\r\n    const [messages, updateMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const handleNewMessage = newMessage => {\r\n            updateMessages([...messages, newMessage]);\r\n        };\r\n        socket.on('chat.message', handleNewMessage);\r\n        return () => socket.off('chat.message', handleNewMessage);\r\n    }, []);\r\n\r\n    const handleOnChange = e => {\r\n        updateMessage(e.target.value);\r\n    };\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        if (message.trim()) {\r\n            socket.emit('chat.message', {\r\n                id: 1,\r\n                message,\r\n            });\r\n            updateMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className=\"container\">\r\n            <ul className=\"list\">\r\n                        {messages.map(m => (\r\n                            <li\r\n                                className=\"list__item list__item--mine\"\r\n                                key={m.id}\r\n                            >\r\n                                <span className=\"message message--mine\">\r\n                                    {m.message}\r\n                                </span>\r\n                            </li>\r\n                        ))}\r\n                <li className=\"list__item list__item--other\">\r\n                    <span className=\"message message--other\">\r\n                        OlÃ¡\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n            <form\r\n                className=\"form\"\r\n                onSubmit={handleFormSubmit}\r\n            >\r\n                <input\r\n                    className=\"form__field\"\r\n                    onChange={handleOnChange}\r\n                    placeholder=\"Digite uma nova mensagem aqui\"\r\n                    type=\"text\"\r\n                    value={message}\r\n                />\r\n            </form>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}