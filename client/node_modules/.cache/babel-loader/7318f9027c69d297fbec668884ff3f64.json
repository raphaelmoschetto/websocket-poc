{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebMotorsFontes\\\\websocket-poc\\\\client\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myId = uuidv4();\nconst socket = io('http://localhost:8080', {\n  transports: ['websocket']\n});\nsocket.on('connect', () => console.log('IO Connect => New connection has estabilished'));\n\nconst Chat = () => {\n  _s();\n\n  const [message, updateMessage] = useState('');\n  const [messages, updateMessages] = useState([]);\n  useEffect(() => {\n    const handleNewMessage = newMessage => {\n      updateMessages([...messages, newMessage]);\n    };\n\n    socket.on('chat.message', handleNewMessage);\n    return () => socket.off('chat.message', handleNewMessage);\n  }, [messages]);\n\n  const handleOnChange = e => {\n    updateMessage(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (message.trim()) {\n      socket.emit('chat.message', {\n        id: myId,\n        message\n      });\n      updateMessage('');\n    }\n  };\n\n  const handleDateNow = () => {\n    const currentdate = new Date();\n    const datetime = \"Enviado em: \" + currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \" @ \" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n    return datetime;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: messages.map((m, index) => {\n        const idOrigin = m.id === myId ? 'mine' : 'other';\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list__item list__item--${idOrigin}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `message message--${idOrigin}`,\n            children: [m.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message__date\",\n              children: handleDateNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form__field\",\n        onChange: handleOnChange,\n        placeholder: \"Digite uma nova mensagem aqui\",\n        type: \"text\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"HO/xg/OJMSFNdNRWZNE8NEvysc0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/WebMotorsFontes/websocket-poc/client/src/Chat.js"],"names":["React","useEffect","useState","io","v4","uuidv4","myId","socket","transports","on","console","log","Chat","message","updateMessage","messages","updateMessages","handleNewMessage","newMessage","off","handleOnChange","e","target","value","handleFormSubmit","preventDefault","trim","emit","id","handleDateNow","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","map","m","index","idOrigin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst myId = uuidv4();\r\nconst socket = io('http://localhost:8080', { transports: ['websocket'] });\r\nsocket.on('connect', () => console.log('IO Connect => New connection has estabilished'));\r\n\r\nconst Chat = () => {\r\n    const [message, updateMessage] = useState('');\r\n    const [messages, updateMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const handleNewMessage = newMessage => {\r\n            updateMessages([...messages, newMessage]);\r\n        };\r\n        socket.on('chat.message', handleNewMessage);\r\n        return () => socket.off('chat.message', handleNewMessage);\r\n    }, [messages]);\r\n\r\n    const handleOnChange = e => {\r\n        updateMessage(e.target.value);\r\n    };\r\n\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        if (message.trim()) {\r\n            socket.emit('chat.message', {\r\n                id: myId,\r\n                message,\r\n            });\r\n            updateMessage('');\r\n        }\r\n    };\r\n\r\n    const handleDateNow = () => {\r\n        const currentdate = new Date();\r\n        const datetime = \"Enviado em: \" + currentdate.getDate() + \"/\"\r\n            + (currentdate.getMonth() + 1) + \"/\"\r\n            + currentdate.getFullYear() + \" @ \"\r\n            + currentdate.getHours() + \":\"\r\n            + currentdate.getMinutes() + \":\"\r\n            + currentdate.getSeconds();\r\n\r\n        return datetime;\r\n    };\r\n\r\n    return (\r\n        <main className=\"container\">\r\n            <ul className=\"list\">\r\n                {messages.map((m, index) => {\r\n                    const idOrigin = m.id === myId ? 'mine' : 'other';\r\n                    return (\r\n                        <li\r\n                            className={`list__item list__item--${idOrigin}`}\r\n                            key={index}\r\n                        >\r\n                            <span className={`message message--${idOrigin}`}>\r\n                                {m.message}\r\n                                <br/>\r\n                                <span className=\"message__date\">{handleDateNow()}</span>\r\n                            </span>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <form\r\n                className=\"form\"\r\n                onSubmit={handleFormSubmit}\r\n            >\r\n                <input\r\n                    className=\"form__field\"\r\n                    onChange={handleOnChange}\r\n                    placeholder=\"Digite uma nova mensagem aqui\"\r\n                    type=\"text\"\r\n                    value={message}\r\n                />\r\n            </form>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}